content_assist_category_order=org.eclipse.jdt.ui.templateProposalCategory\:0\u0000org.eclipse.jdt.ui.swtProposalCategory\:65536\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\:65537\u0000org.eclipse.jdt.ui.javaChainProposalCategory\:65538\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\:65539\u0000org.eclipse.jdt.ui.textProposalCategory\:65540\u0000org.eclipse.jdt.ui.javaAllProposalCategory\:65541\u0000org.eclipse.jdt.ui.javaPostfixProposalCategory\:65542\u0000com.tabnine.eclipse.tabnineJavaProposalCategory\:8\u0000
content_assist_disabled_computers=org.eclipse.jdt.ui.swtProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.javaChainProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaPostfixProposalCategory\u0000
content_assist_favorite_static_members=org.junit.Assert.*;org.junit.Assume.*;org.junit.jupiter.api.Assertions.*;org.junit.jupiter.api.Assumptions.*;org.junit.jupiter.api.DynamicContainer.*;org.junit.jupiter.api.DynamicTest.*;org.mockito.ArgumentMatchers.*;org.mockito.Mockito.*
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"/>
content_assist_number_of_computers=13
eclipse.preferences.version=1
formatter_profile=_NetBeans
formatter_settings_version=21
java_bracket=169,183,198
java_comment_task_tag=243,248,209
java_comment_task_tag_bold=false
java_default=169,183,198
java_doc_default=128,128,128
java_doc_link=40,123,222
java_keyword=204,120,50
java_keyword_return=204,120,50
java_multi_line_comment=128,128,128
java_operator=169,183,198
java_string=106,135,89
markOccurrences=false
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.formatterprofiles=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\r\n<profiles version\="21">\r\n    <profile kind\="CodeFormatterProfile" name\="NetBeans" version\="21">\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_ellipsis" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_javadoc_comments" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indentation.size" value\="4"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.align_with_spaces" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.continuation_indentation" value\="2"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.number_of_blank_lines_before_code_block" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_switch_case_expressions" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_after_package" value\="1"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.indent_root_tags" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.enabling_tag" value\="@formatter\:on"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_record_components" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_multiplicative_operator" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_logical_operator" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_annotation_declaration_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_record_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_multiplicative_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_abstract_method" value\="1"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_enum_constant_declaration_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.align_variable_declarations_on_columns" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_multiplicative_operator" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_anonymous_type_declaration_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_switch_case_expressions" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_shift_operator" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_block" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_code_block" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_bitwise_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_type_parameters" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_compact_loops" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_unary_operator" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_ellipsis" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_annotations_on_enum_constant" value\="49"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.text_block_indentation" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.align_type_members_on_columns" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_assignment" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_module_statements" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_if_then_body_block_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.align_assignment_statements_on_columns" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_block_in_case" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_conditional_expression_chain" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_header" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_type_annotations" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_assertion_message_operator" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_method_declaration" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines" value\="2147483647"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_bitwise_operator" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_resources_in_try" value\="80"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_source_code" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_field" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_method" value\="1"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_not_operator" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_html" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_compact_if" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_empty_lines" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_type_arguments" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_unary_operator" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_annotations_on_package" value\="49"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_label" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_case" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_record_header" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_bitwise_operator" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.indent_tag_description" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_record_constructor" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_string_concatenation" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_multiple_fields" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_array_initializer" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_shift_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_shift_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_record_components" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_additive_operator" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_simple_getter_setter_on_one_line" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_string_concatenation" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.join_lines_in_comments" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_record_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_relational_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_between_import_groups" value\="1"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_logical_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_after_imports" value\="1"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_record_declaration" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_default" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.disabling_tag" value\="@formatter\:off"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_enum_constants" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_imports" value\="1"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_method_body" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_case" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations" value\="1"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_statements_compare_to_block" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.line_length" value\="80"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.use_on_off_tags" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_method_body_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_loop_body_block_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_method_declaration" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_type_declaration_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_additive_operator" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_constructor" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_relational_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_record_declaration_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_lambda_body" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.compact_else_if" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_annotations_on_parameter" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_relational_operator" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve" value\="1"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_additive_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_string_concatenation" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_line_comments" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_record_declaration" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.number_of_blank_lines_after_code_block" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_conditional_expression" value\="80"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_annotations_on_type" value\="49"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_annotations_on_local_variable" value\="49"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_default" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.insert_new_line_between_different_tags" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_additive_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.join_wrapped_lines" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_annotations_on_field" value\="49"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_conditional_operator" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_shift_operator" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_code_block_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_record_components" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.tabulation.size" value\="4"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_bitwise_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer" value\="2"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_record_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_assignment_operator" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_switch" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_lambda_body_block_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_annotations_on_method" value\="49"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_record_constructor_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_declaration" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_assertion_message" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk" value\="1"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_member_type" value\="1"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_logical_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_record_declaration" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_semicolon" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_relational_operator" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_block_comments" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration" value\="16"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_after_last_class_body_declaration" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_statements_compare_to_body" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_logical_operator" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_between_statement_group_in_switch" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration" value\="common_lines"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.keep_enum_declaration_on_one_line" value\="one_line_never"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_enum_constant" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_type_declaration" value\="end_of_line"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_multiplicative_operator" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_package" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional" value\="insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.comment.indent_parameter_description" value\="false"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_code_block" value\="0"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.tabulation.char" value\="tab"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_string_concatenation" value\="true"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.lineSplit" value\="120"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation" value\="do not insert"/>\r\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch" value\="insert"/>\r\n    </profile>\r\n</profiles>\r\n
org.eclipse.jdt.ui.formatterprofiles.version=21
org.eclipse.jdt.ui.javadoc=false
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="newtype_context" deleted\="false" description\="Newly created files" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.newtype" name\="newtype">${package_declaration}\r\n\r\n${type_declaration}</template><template autoinsert\="false" context\="classbody_context" deleted\="false" description\="Code in new class type bodies" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.classbody" name\="classbody">\t</template><template autoinsert\="false" context\="interfacebody_context" deleted\="false" description\="Code in new interface type bodies" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.interfacebody" name\="interfacebody">\t</template><template autoinsert\="false" context\="recordbody_context" deleted\="false" description\="Code in new record type bodies" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.recordbody" name\="recordbody">\t</template><template autoinsert\="false" context\="annotationbody_context" deleted\="false" description\="Code in new annotation type bodies" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.annotationbody" name\="annotationbody">\t</template><template autoinsert\="false" context\="catchblock_context" deleted\="false" description\="Code in new catch blocks" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.catchblock" name\="catchblock">${exception_var}.printStackTrace();</template><template autoinsert\="false" context\="methodbody_context" deleted\="false" description\="Code in created method stubs" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.methodbody" name\="methodbody">${body_statement}</template><template autoinsert\="false" context\="constructorbody_context" deleted\="false" description\="Code in created constructor stubs" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.constructorbody" name\="constructorbody">${body_statement}</template></templates>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="java-statements" deleted\="false" description\="use index on array" enabled\="true" id\="org.eclipse.jdt.ui.templates.for_array" name\="for">for (int ${index} \= 0; ${index} &lt; ${array}.length; ++${index}) {\r\n\t${line_selection}${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="use index on array with temporary variable" enabled\="false" id\="org.eclipse.jdt.ui.templates.for_temp" name\="for">for (int ${index} \= 0; ${index} &lt; ${array}.length; ++${index}) {\r\n\t${array_type} ${array_element} \= ${array}[${index}];\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="iterate over collection" enabled\="false" id\="org.eclipse.jdt.ui.templates.for_collection" name\="for">for (${iteratorType\:newType(java.util.Iterator)} ${iterator} \= ${collection}.iterator(); ${iterator}.hasNext(); ) {\r\n\t${type\:elemType(collection)} ${name\:newName(type)} \= (${type}) ${iterator}.next();\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="iterate over an array or Iterable" enabled\="false" id\="org.eclipse.jdt.ui.templates.for_iterable" name\="foreach">for (${iterable_type} ${iterable_element} \: ${iterable}) {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="iterate over map" enabled\="false" id\="org.eclipse.jdt.ui.templates.for_map" name\="formap">for (Map.Entry&lt;${keyType}, ${valType}&gt; ${entry}\: ${map}.entrySet()) {\r\n\t${keyType} ${key} \= ${entry}.getKey();\r\n\t${valType} ${val} \= ${entry}.getValue();\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="iterate with enumeration" enabled\="false" id\="org.eclipse.jdt.ui.templates.while_enumeration" name\="while">while (${en\:var(java.util.Enumeration)}.hasMoreElements()) {\r\n\t${type\:argType(en)} ${elem\:newName(type)} \= (${type}) ${en}.nextElement();\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="iterate with iterator" enabled\="false" id\="org.eclipse.jdt.ui.templates.while_iterator" name\="while">while (${it\:var(java.util.Iterator)}.hasNext()) {\r\n\t${type\:argType(it)} ${elem\:newName(type)} \= (${type}) ${it}.next();\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="do while statement" enabled\="false" id\="org.eclipse.jdt.ui.templates.do" name\="do">do {\r\n\t${line_selection}${cursor}\r\n} while (${condition\:var(boolean)});</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="switch case statement" enabled\="false" id\="org.eclipse.jdt.ui.templates.switch" name\="switch">switch (${key}) {\r\n\tcase ${value}\:\r\n\t\t${cursor}\r\n\t\tbreak;\r\n\r\n\tdefault\:\r\n\t\tbreak;\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="switch labeled statement" enabled\="false" id\="org.eclipse.jdt.ui.templates.switch.labeled" name\="switch">switch (${key}) {\r\n\tcase ${value} -&gt;\r\n\t\t${cursor}\r\n\t\t\r\n\r\n\tdefault -&gt;\r\n\t\tthrow new IllegalArgumentException("Unexpected value\: " + ${key});\r\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="switch case expression" enabled\="false" id\="org.eclipse.jdt.ui.templates.switch.case.expression" name\="switch">switch (${key}) {\r\n\tcase ${value}\: {\r\n\t\t${cursor}\r\n\t\tyield ${type};\r\n\t}\r\n\tdefault\:\r\n\t\tthrow new IllegalArgumentException("Unexpected value\: " + ${key});\r\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="switch labeled expression" enabled\="false" id\="org.eclipse.jdt.ui.templates.switch.labeled.expression" name\="switch">switch (${key}) {\r\n\tcase ${value} -&gt;\r\n\t\t${cursor}\r\n\t\t\r\n\r\n\tdefault -&gt;\r\n\t\tthrow new IllegalArgumentException("Unexpected value\: " + ${key});\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="if statement" enabled\="false" id\="org.eclipse.jdt.ui.templates.if" name\="if">if (${condition\:var(boolean)}) {\r\n\t${line_selection}${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="if else statement" enabled\="false" id\="org.eclipse.jdt.ui.templates.ifelse" name\="ifelse">if (${condition\:var(boolean)}) {\r\n\t${cursor}\r\n} else {\r\n\t\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="else if block" enabled\="false" id\="org.eclipse.jdt.ui.templates.elseif" name\="elseif">else if (${condition\:var(boolean)}) {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="else block" enabled\="false" id\="org.eclipse.jdt.ui.templates.else" name\="else">else {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="if statement checking for null" enabled\="false" id\="org.eclipse.jdt.ui.templates.ifnull" name\="ifNull">if (${name\:var} \=\= null) {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="if statement checking for not null" enabled\="false" id\="org.eclipse.jdt.ui.templates.ifnotnull" name\="ifNotNull">if (${name\:var} \!\= null) {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="try catch block" enabled\="false" id\="org.eclipse.jdt.ui.templates.try" name\="try_catch">try {\r\n\t${line_selection}${cursor}\r\n} catch (${Exception} ${exception_variable_name}) {\r\n\t// ${todo}\: handle exception\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="try finally block" enabled\="false" id\="org.eclipse.jdt.ui.templates.tryfinally" name\="try_finally">try {\r\n\t${line_selection}${cursor}\r\n} finally {\r\n\t// ${todo}\: handle finally clause\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="catch block" enabled\="false" id\="org.eclipse.jdt.ui.templates.catch" name\="catch">catch (${Exception} ${exception_variable_name}) {\r\n\t${cursor}// ${todo}\: handle exception\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="finally block" enabled\="false" id\="org.eclipse.jdt.ui.templates.finally" name\="finally">finally {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="main method" enabled\="false" id\="org.eclipse.jdt.ui.templates.main" name\="main">public static void main(String[] args) {\r\n\t${cursor}\r\n}// main()</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="public method" enabled\="false" id\="org.eclipse.jdt.ui.templates.public_method" name\="public_method">public ${void} ${name}(${}) {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="public static method" enabled\="false" id\="org.eclipse.jdt.ui.templates.public_static_method" name\="public_static_method">public static ${void} ${name}(${}) {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="protected method" enabled\="false" id\="org.eclipse.jdt.ui.templates.protected_method" name\="protected_method">protected ${void} ${name}(${}) {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="private method" enabled\="false" id\="org.eclipse.jdt.ui.templates.private_method" name\="private_method">private ${void} ${name}(${}) {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="private static method" enabled\="false" id\="org.eclipse.jdt.ui.templates.private_static_method" name\="private_static_method">private static ${void} ${name}(${}) {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="dynamic type test and cast" enabled\="false" id\="org.eclipse.jdt.ui.templates.instanceof" name\="instanceof">if (${name\:var} instanceof ${type}) {\r\n\t${type} ${new_name} \= (${type})${name};\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="dynamic cast" enabled\="false" id\="org.eclipse.jdt.ui.templates.cast" name\="cast">${type} ${new_name} \= (${type}) ${name};</template><template autoinsert\="false" context\="java" deleted\="false" description\="create new object" enabled\="false" id\="org.eclipse.jdt.ui.templates.new" name\="new">${type} ${name} \= new ${type}(${});</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="lazy creation" enabled\="false" id\="org.eclipse.jdt.ui.templates.lazy" name\="lazy">if (${name\:var} \=\= null) {\r\n\t${name} \= new ${type}(${arguments});\r\n\t${cursor}\r\n}\r\n\r\nreturn ${name};</template><template autoinsert\="false" context\="java" deleted\="false" description\="convert collection to array" enabled\="false" id\="org.eclipse.jdt.ui.templates.toarray" name\="toarray">(${type\:elemType(collection)}[]) ${collection}.toArray(new ${type}[${collection}.size()])</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="print to standard out" enabled\="true" id\="org.eclipse.jdt.ui.templates.sysout" name\="sout">System.out.println("${cursor}");</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="print to standard error" enabled\="false" id\="org.eclipse.jdt.ui.templates.syserr" name\="syserr">System.err.println(${word_selection}${});${cursor}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="print current method to standard out" enabled\="false" id\="org.eclipse.jdt.ui.templates.systrace" name\="systrace">System.out.println("${enclosing_type}.${enclosing_method}()");</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;code&gt;&lt;/code&gt;" enabled\="false" id\="org.eclipse.jdt.ui.templates.code_tag" name\="&lt;code&gt;">&lt;code&gt;${word_selection}${}&lt;/code&gt;${cursor}</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;code&gt;null&lt;/code&gt;" enabled\="false" id\="org.eclipse.jdt.ui.templates.code_tag_null" name\="null">&lt;code&gt;null&lt;/code&gt;</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;code&gt;true&lt;/code&gt;" enabled\="false" id\="org.eclipse.jdt.ui.templates.code_tag_true" name\="true">&lt;code&gt;true&lt;/code&gt;</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;code&gt;false&lt;/code&gt;" enabled\="false" id\="org.eclipse.jdt.ui.templates.code_tag_false" name\="false">&lt;code&gt;false&lt;/code&gt;</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;pre&gt;&lt;/pre&gt;" enabled\="false" id\="org.eclipse.jdt.ui.templates.pre_tag" name\="&lt;pre&gt;">&lt;pre&gt;${word_selection}${}&lt;/pre&gt;${cursor}</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;b&gt;&lt;/b&gt;" enabled\="false" id\="org.eclipse.jdt.ui.templates.b_tag" name\="&lt;b&gt;">&lt;b&gt;${word_selection}${}&lt;/b&gt;${cursor}</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;i&gt;&lt;/i&gt;" enabled\="false" id\="org.eclipse.jdt.ui.templates.i_tag" name\="&lt;i&gt;">&lt;i&gt;${word_selection}${}&lt;/i&gt;${cursor}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="while loop with condition" enabled\="false" id\="org.eclipse.jdt.ui.templates.while_condition" name\="while">while (${condition\:var(boolean)}) {\r\n\t${line_selection}${cursor}\r\n}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="test method (JUnit 3)" enabled\="false" id\="org.eclipse.jdt.ui.templates.test" name\="test3">public void test${name}() throws Exception {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="test method (JUnit 4)" enabled\="false" id\="org.eclipse.jdt.ui.templates.test_junit4" name\="test4">@${testType\:newType(org.junit.Test)}\r\npublic void ${testName}() throws Exception {\r\n\t${staticImport\:importStatic('org.junit.Assert.*')}${cursor}\r\n}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="test method (JUnit 5)" enabled\="false" id\="org.eclipse.jdt.ui.templates.test_junit5" name\="test_jupiter">@${testType\:newType(org.junit.jupiter.api.Test)}\r\nvoid ${testName}() throws Exception {\r\n\t${staticImport\:importStatic('org.junit.jupiter.api.Assertions.*')}${cursor}\r\n}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="test factory method (JUnit Jupiter)" enabled\="false" id\="org.eclipse.jdt.ui.templates.testfactory_junit5" name\="test_factory">@${testfactoryType\:newType(org.junit.jupiter.api.TestFactory)}\r\n${returnType\:link('DynamicNode', 'Stream&lt;DynamicNode&gt;', 'Collection&lt;DynamicNode&gt;', 'Iterable&lt;DynamicNode&gt;', 'Iterator&lt;DynamicNode&gt;', 'DynamicNode[]')} ${testFactoryName}() throws Exception {\r\n\t// ${todo}\: generate dynamic test cases\r\n\t${cursor}return null;${typeImports\:import('org.junit.jupiter.api.DynamicNode')}${staticImports\:importStatic('org.junit.jupiter.api.Assertions.*', 'org.junit.jupiter.api.DynamicContainer.*', 'org.junit.jupiter.api.DynamicTest.*')}\r\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="non-externalized string marker" enabled\="false" id\="org.eclipse.jdt.ui.templates.non-nls" name\="nls">//$$NON-NLS-${N}$$</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="$FALL-THROUGH$ marker" enabled\="false" id\="org.eclipse.jdt.ui.templates.fall-through" name\="fall-through">//$$FALL-THROUGH$$</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="synchronized block" enabled\="false" id\="org.eclipse.jdt.ui.templates.synchronized" name\="synchronized">synchronized (${mutex\:var}) {\r\n\t${line_selection}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="explicit lock acquisition" enabled\="false" id\="org.eclipse.jdt.ui.templates.lock" name\="lock">${lock\:var(java.util.concurrent.locks.Lock)}.lock();\r\ntry {\r\n\t${line_selection}${cursor}\r\n} finally {\r\n\t${lock}.unlock();\r\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="runnable" enabled\="false" id\="org.eclipse.jdt.ui.templates.runnable" name\="runnable">new Runnable() {\r\n\tpublic void run() {\r\n\t\t${line_selection}\r\n\t}\r\n}</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="merge two arrays into one" enabled\="false" id\="org.eclipse.jdt.ui.templates.arraymerge" name\="arraymerge">${array_type}[] ${result\:newName(array1)} \= new ${array_type}[${array1\:array}.length + ${array}.length];\r\nSystem.arraycopy(${array1}, 0, ${result}, 0, ${array1}.length);\r\nSystem.arraycopy(${array}, 0, ${result}, ${array1}.length, ${array}.length);</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="add an element to an array" enabled\="false" id\="org.eclipse.jdt.ui.templates.arrayadd" name\="arrayadd">${array_type}[] ${result\:newName(array)} \= new ${array_type}[${array}.length + 1];\r\nSystem.arraycopy(${array}, 0, ${result}, 0, ${array}.length);\r\n${result}[${array}.length]\= ${var};</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="static final field" enabled\="false" id\="org.eclipse.jdt.ui.templates.static_final" name\="static_final">${visibility\:link('public ','protected ','','private ')}static final ${type\:link(String,int)} ${NAME} \= ${expr\:link('""',0)};</template><template autoinsert\="false" context\="module" deleted\="false" description\="create module declaration" enabled\="false" id\="org.eclipse.jdt.ui.templates.new_module" name\="new_module">module ${name} {\r\n\t${cursor}\r\n}</template><template autoinsert\="false" context\="java-empty" deleted\="false" description\="create new class" enabled\="false" id\="org.eclipse.jdt.ui.templates.new_class" name\="new_class">package ${enclosing_package};\r\n\r\npublic class ${primary_type_name} ${cursor} {\r\n\r\n}</template><template autoinsert\="false" context\="java-empty" deleted\="false" description\="create new interface" enabled\="false" id\="org.eclipse.jdt.ui.templates.new_iface" name\="new_iface">package ${enclosing_package};\r\n\r\npublic interface ${primary_type_name} ${cursor} {\r\n\r\n}</template><template autoinsert\="false" context\="java-empty" deleted\="false" description\="create new enumeration" enabled\="false" id\="org.eclipse.jdt.ui.templates.new_enum" name\="new_enum">package ${enclosing_package};\r\n\r\npublic enum ${primary_type_name} ${cursor} {\r\n\r\n}</template><template autoinsert\="false" context\="java-empty" deleted\="false" description\="create new record" enabled\="false" id\="org.eclipse.jdt.ui.templates.new_record" name\="new_record">package ${enclosing_package};\r\n\r\npublic record ${primary_type_name}(${cursor}) {\r\n\r\n}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new top level Shell with event loop" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.mainloop" name\="mainloop">${displayType\:newType(org.eclipse.swt.widgets.Display)} ${display\:newName(org.eclipse.swt.widgets.Display)} \= new ${displayType}();\r\n${shellType\:newType(org.eclipse.swt.widgets.Shell)} ${shell\:newName(org.eclipse.swt.widgets.Shell)} \= new ${shellType}(${display});\r\n${shell}.setLayout(new ${layoutType\:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns\:link(1, 2, 3, 4, 5)}, ${equalColumns\:link(false, true)}));\r\n\r\n${cursor}\r\n\r\n${shell}.pack();\r\n${shell}.open();\r\nwhile (\!${shell}.isDisposed()) {\r\n\tif (\!${display}.readAndDispatch ()) \r\n\t\t${display}.sleep();\r\n}\r\n${display}.dispose();</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="execute a runnable in the UI thread" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.execute" name\="execute">${display\:var(org.eclipse.swt.widgets.Display)}.${kind\:link(syncExec, asyncExec)}(new ${runnable\:newType(java.lang.Runnable)}(){\r\n\tpublic void run(){\r\n\t\t${cursor}\r\n\t}\r\n});</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="add a listener to a Widget " enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.addlistener" name\="addlistener">${control\:var(org.eclipse.swt.widgets.Widget)}.addListener(${type\:link(\r\n\tSWT.Activate,\r\n\tSWT.Arm,\r\n\tSWT.Close,\r\n\tSWT.Collapse,\r\n\tSWT.Deactivate,\r\n\tSWT.DefaultSelection,\r\n\tSWT.Deiconify,\r\n\tSWT.Dispose,\r\n\tSWT.DragDetect,\r\n\tSWT.EraseItem,\r\n\tSWT.Expand,\r\n\tSWT.FocusIn,\r\n\tSWT.FocusOut,\r\n\tSWT.HardKeyDown,\r\n\tSWT.HardKeyUp,\r\n\tSWT.Help,\r\n\tSWT.Hide,\r\n\tSWT.Iconify,\r\n\tSWT.ImeComposition,\r\n\tSWT.KeyDown,\r\n\tSWT.KeyUp,\r\n\tSWT.MeasureItem,\r\n\tSWT.MenuDetect,\r\n\tSWT.Modify,\r\n\tSWT.MouseDoubleClick,\r\n\tSWT.MouseDown,\r\n\tSWT.MouseEnter,\r\n\tSWT.MouseExit,\r\n\tSWT.MouseHover,\r\n\tSWT.MouseMove,\r\n\tSWT.MouseUp,\r\n\tSWT.MouseWheel,\r\n\tSWT.Move,\r\n\tSWT.Paint,\r\n\tSWT.PaintItem,\r\n\tSWT.Resize,\r\n\tSWT.Selection,\r\n\tSWT.SetData,\r\n\tSWT.Settings,\r\n\tSWT.Show,\r\n\tSWT.Traverse,\r\n\tSWT.Verify)}, new ${listener\:newType(org.eclipse.swt.widgets.Listener)}(){\r\n\tpublic void handleEvent(${event\:newType(org.eclipse.swt.widgets.Event)} e) {\r\n\t\t${imp\:import(org.eclipse.swt.SWT)}${cursor}\t\t\t\t\r\n\t}\r\n});</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new GridLayout for a Composites" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.gridlayout" name\="GridLayout">${gridLayout\:newType(org.eclipse.swt.layout.GridLayout)} ${layout\:newName(org.eclipse.swt.layout.GridLayout)} \= new ${gridLayout}(${columns\:link(1, 2, 3, 4, 5)}, ${width\:link(false, true)});\r\n${layout}.marginWidth \= ${marginW\:link(5, 0)};\r\n${layout}.marginHeight \= ${marginH\:link(5, 0)};\r\n${layout}.verticalSpacing \= ${vSpacing\:link(0, 5)};\r\n${layout}.horizontalSpacing \= ${hSpacing\:link(0, 5)};\r\n${parent\:var(org.eclipse.swt.widgets.Composite)}.setLayout(${layout});\r\n${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new GridData for a Control" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.griddata" name\="GridData">${gridData\:newType(org.eclipse.swt.layout.GridData)} ${layoutData\:newName(org.eclipse.swt.layout.GridData)} \= new ${gridData}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(false, true)});\r\n${layoutData}.widthHint\= ${width\:link(SWT.DEFAULT)};\r\n${layoutData}.heightHint\= ${height\:link(SWT.DEFAULT)};\r\n${parent\:var(org.eclipse.swt.widgets.Control)}.setLayoutData(${layoutData});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="using GridDataFactory for a Control" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.griddatafactory" name\="GridDataFactory">GridDataFactory.fillDefaults().grab(true, false).applyTo(${parent\:var(org.eclipse.swt.widgets.Control)});\r\n${imp\:import(org.eclipse.jface.layout.GridDataFactory)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Label" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.label" name\="Label">${labelType\:newType(org.eclipse.swt.widgets.Label)} ${label\:newName(org.eclipse.swt.widgets.Label)}\= new ${labelType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.WRAP, 'SWT.SEPARATOR | SWT.HORIZONTAL', 'SWT.SEPARATOR | SWT.VERTICAL')});\r\n${label}.setLayoutData(new ${type\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\r\n${label}.setText(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Image" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.image" name\="Image">${labelType\:newType(org.eclipse.swt.widgets.Label)} ${image\:newName(org.eclipse.swt.widgets.Label)}\= new ${labelType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.BORDER)});\r\n${image}.setLayoutData(new ${type\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\r\n${image}.setImage(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Button" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.button" name\="Button">${buttonType\:newType(org.eclipse.swt.widgets.Button)} ${button\:newName(org.eclipse.swt.widgets.Button)}\= new ${buttonType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.PUSH, SWT.TOGGLE, SWT.RADIO, SWT.CHECK, SWT.FLAT)});\r\n${button}.setLayoutData(new ${type\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\r\n${button}.setText(${word_selection}${});\r\n${button}.addSelectionListener(new SelectionAdapter() {\r\n\t\t\t@Override\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\r\n\t\t\t\t${listener\:link('')}\r\n\t\t\t}\r\n\t\t});\r\n${imp\:import(org.eclipse.swt.SWT, org.eclipse.swt.events.SelectionAdapter, org.eclipse.swt.events.SelectionEvent)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Link" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.link" name\="Link">${linkType\:newType(org.eclipse.swt.widgets.Link)} ${link\:newName(org.eclipse.swt.widgets.Link)}\= new ${linkType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, SWT.NONE);\r\n${link}.setLayoutData(new ${type\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\r\n${link}.setText(${word_selection}${});\r\n${link}.addSelectionListener(new SelectionAdapter() {\r\n\t\t\t@Override\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\r\n\t\t\t\t${listener\:link('')}\r\n\t\t\t}\r\n\t\t});\r\n${imp\:import(org.eclipse.swt.SWT, org.eclipse.swt.events.SelectionAdapter, org.eclipse.swt.events.SelectionEvent)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Combo" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.combo" name\="Combo">${comboType\:newType(org.eclipse.swt.widgets.Combo)} ${combo\:newName(org.eclipse.swt.widgets.Combo)}\= new ${comboType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.DROP_DOWN, 'SWT.DROP_DOWN | SWT.READ_ONLY')});\r\n${combo}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(true, false)}, ${vex\:link(false, true)}));\r\n${combo}.setItems(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Scale" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.scale" name\="Scale">${scaleType\:newType(org.eclipse.swt.widgets.Scale)} ${scale\:newName(org.eclipse.swt.widgets.Scale)}\= new ${scaleType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.HORIZONTAL, SWT.VERTICAL)});\r\n${scale}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, FILL, CENTER, END)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\r\n${scale}.setMaximum(${max\:link(100)});\r\n${scale}.setIncrement(${inc\:link(5)});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Spinner" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.spinner" name\="Spinner">${spinnerType\:newType(org.eclipse.swt.widgets.Spinner)} ${spinner\:newName(org.eclipse.swt.widgets.Spinner)}\= new ${spinnerType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.BORDER, 'SWT.WRAP | SWT.BORDER', 'SWT.READ_ONLY | SWT.BORDER', 'SWT.READ_ONLY | SWT.WRAP | SWT.BORDER', SWT.WRAP, SWT.READ_ONLY)});\r\n${spinner}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\r\n${spinner}.setMaximum(${max\:link(10)});\r\n${spinner}.setIncrement(${inc\:link(1)});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Browser" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.browser" name\="Browser">${browserType\:newType(org.eclipse.swt.browser.Browser)} ${browser\:newName(org.eclipse.swt.browser.Browser)}\= new ${browserType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.WEBKIT)});\r\n${browser}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${browser}.setUrl(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new DateTime" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.datetime" name\="DateTime">${dateType\:newType(org.eclipse.swt.widgets.DateTime)} ${dateTime\:newName(org.eclipse.swt.widgets.DateTime)}\= new ${dateType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.CALENDAR | SWT.SHORT', 'SWT.CALENDAR | SWT.MEDIUM', 'SWT.CALENDAR | SWT.LONG', 'SWT.TIME | SWT.SHORT', 'SWT.TIME | SWT.MEDIUM', 'SWT.TIME | SWT.LONG', 'SWT.DATE | SWT.SHORT', 'SWT.DATE | SWT.MEDIUM', 'SWT.DATE | SWT.LONG')});\r\n${dateTime}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Shell" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.shell" name\="Shell">${shellType\:newType(org.eclipse.swt.widgets.Shell)} ${shell\:newName(org.eclipse.swt.widgets.Shell)} \= new ${shellType}(${parent\:var(org.eclipse.swt.widgets.Shell)}, ${style\:link('SWT.DIALOG_TRIM | SWT.PRIMARY_MODAL', 'SWT.DIALOG_TRIM | SWT.MODELESS', 'SWT.SHELL_TRIM | SWT.MODELESS', 'SWT.SHELL_TRIM | SWT.PRIMARY_MODAL')});\r\n${shell}.setLayout(new ${layoutType\:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns\:link(1, 2, 3, 4, 5)}, ${equalColumns\:link(false, true)}));\r\n\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\r\n\r\n${shell}.pack();\r\n\r\n${shell}.open();</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Composite with GridLayout" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.gridcomposite" name\="Composite">${compositeType\:newType(org.eclipse.swt.widgets.Composite)} ${composite\:newName(org.eclipse.swt.widgets.Composite)}\= new ${compositeType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.BORDER)});\r\n${composite}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${composite}.setLayout(new ${layoutType\:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns\:link(1, 2, 3, 4, 5)}, ${equalColumns\:link(false, true)}));\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new ScrolledComposite" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.scrolledcomposite" name\="ScrolledComposite">${compositeType\:newType(org.eclipse.swt.custom.ScrolledComposite)} ${scrolled\:newName(org.eclipse.swt.custom.ScrolledComposite)} \= new ${compositeType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.H_SCROLL | SWT.V_SCROLL', SWT.H_SCROLL, SWT.V_SCROLL)});\r\n${scrolled}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${scrolled}.setExpandVertical(${exV\:link(false, true)});\r\n${scrolled}.setExpandHorizontal(${exH\:link(false, true)});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\r\n\r\n${scrolled}.setContent(${content});\r\nPoint ${contentSize\:newName(org.eclipse.swt.graphics.Point)} \= ${content}.computeSize(SWT.DEFAULT, SWT.DEFAULT);\r\n${content}.setSize(${contentSize});\r\n${scrolled}.setMinSize(${contentSize});</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Group with GridLayout" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.group" name\="Group">${groupType\:newType(org.eclipse.swt.widgets.Group)} ${group\:newName(org.eclipse.swt.widgets.Group)}\= new ${groupType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.SHADOW_ETCHED_IN, SWT.SHADOW_ETCHED_OUT, SWT.SHADOW_IN, SWT.SHADOW_OUT, SWT.SHADOW_NONE)});\r\n${group}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(false, true)}));\r\n${group}.setLayout(new ${layoutType\:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns\:link(1, 2, 3, 4, 5)}, ${equalColumns\:link(false, true)}));\r\n${group}.setText(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new SashForm" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.sashform" name\="SashForm">${type\:newType(org.eclipse.swt.custom.SashForm)} ${sash\:newName(org.eclipse.swt.custom.SashForm)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.HORIZONTAL, SWT.VERTICAL)});\r\n${sash}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\r\n\r\n${sash}.setWeights(new int[] {1, 1});</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new ExpandBar" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.expandbar" name\="ExpandBar">${type\:newType(org.eclipse.swt.widgets.ExpandBar)} ${bar\:newName(org.eclipse.swt.widgets.ExpandBar)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.V_SCROLL, SWT.NONE)});\r\n${bar}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new ExpandItem for an ExpandBar" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.expanditem" name\="ExpandItem">${type\:newType(org.eclipse.swt.widgets.ExpandItem)} ${item\:newName(org.eclipse.swt.widgets.ExpandItem)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.ExpandBar)}, SWT.NONE);\r\n${item}.setText(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\r\n\r\n${item}.setControl(${control});\r\n${item}.setHeight(${control}.computeSize(SWT.DEFAULT, SWT.DEFAULT).y);</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TabFolder" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.tabfolder" name\="TabFolder">${type\:newType(org.eclipse.swt.widgets.TabFolder)} ${folder\:newName(org.eclipse.swt.widgets.TabFolder)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.TOP, SWT.BOTTOM)});\r\n${folder}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TabItem for a TabFolder" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.tabitem" name\="TabItem">${type\:newType(org.eclipse.swt.widgets.TabItem)} ${item\:newName(org.eclipse.swt.widgets.TabItem)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.TabFolder)}, SWT.NONE);\r\n${item}.setText(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\r\n\r\n${item}.setControl(${control});</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new ToolBar" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.toolbar" name\="ToolBar">${type\:newType(org.eclipse.swt.widgets.ToolBar)} ${bar\:newName(org.eclipse.swt.widgets.ToolBar)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.FLAT, SWT.WRAP, SWT.RIGHT, SWT.HORIZONTAL, SWT.VERTICAL, SWT.SHADOW_OUT)});\r\n${bar}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new ToolItem for a ToolBar" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.toolitem" name\="ToolItem">${type\:newType(org.eclipse.swt.widgets.ToolItem)} ${item\:newName(org.eclipse.swt.widgets.ToolItem)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.ToolBar)}, ${style\:link(SWT.PUSH, SWT.CHECK, SWT.RADIO, SWT.SEPARATOR, SWT.DROP_DOWN)});\r\n${item}.setText(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Text" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.text" name\="Text">${type\:newType(org.eclipse.swt.widgets.Text)} ${text\:newName(org.eclipse.swt.widgets.Text)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.SINGLE | SWT.LEAD | SWT.BORDER', 'SWT.SINGLE | SWT.LEAD | SWT.READ_ONLY | SWT.BORDER', 'SWT.SINGLE | SWT.LEAD | SWT.PASSWORD | SWT.BORDER', 'SWT.MULTI | SWT.WRAP | SWT.V_SCROLL | SWT.BORDER', 'SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER')});\r\n${text}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(true, false)}, ${vex\:link(false, true)}));\r\n${text}.setText(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new StyledText " enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.styledtext" name\="StyledText">${type\:newType(org.eclipse.swt.custom.StyledText)} ${text\:newName(org.eclipse.swt.custom.StyledText)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.V_SCROLL | SWT.H_SCROLL', 'SWT.V_SCROLL | SWT.H_SCROLL | SWT.READ_ONLY', 'SWT.WRAP | SWT.V_SCROLL', SWT.NONE, SWT.BORDER, SWT.FULL_SELECTION)});\r\n${text}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${text}.setText(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new StyleRange for a StyledText" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.stylerange" name\="StyleRange">${type\:newType(org.eclipse.swt.custom.StyleRange)} ${range\:newName(org.eclipse.swt.custom.StyleRange)}\= new ${type}();\r\n${range}.start\= ${start\:link(0)};\r\n${range}.length\= ${length\:link(0)};\r\n${range}.foreground\= ${fColor\:link(null, 'Display.getDefault().getSystemColor(SWT.COLOR_BLACK)', 'Display.getDefault().getSystemColor(SWT.COLOR_WHITE)', 'Display.getDefault().getSystemColor(SWT.COLOR_RED)', 'Display.getDefault().getSystemColor(SWT.COLOR_BLUE)', 'Display.getDefault().getSystemColor(SWT.COLOR_GREEN)')};\r\n${range}.background\= ${bColor\:link(null, 'Display.getDefault().getSystemColor(SWT.COLOR_BLACK)', 'Display.getDefault().getSystemColor(SWT.COLOR_WHITE)', 'Display.getDefault().getSystemColor(SWT.COLOR_RED)', 'Display.getDefault().getSystemColor(SWT.COLOR_BLUE)', 'Display.getDefault().getSystemColor(SWT.COLOR_GREEN)')};\r\n${range}.fontStyle\= ${fStyle\:link(SWT.NORMAL, SWT.ITALIC, SWT.BOLD)};\r\n${text\:var(org.eclipse.swt.custom.StyledText)}.setStyleRange(${range});\r\n${imp\:import(org.eclipse.swt.SWT, org.eclipse.swt.widgets.Display)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new List" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.list" name\="List">${type\:newType(org.eclipse.swt.widgets.List)} ${list\:newName(org.eclipse.swt.widgets.List)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL', 'SWT.MULTI | SWT.V_SCROLL', SWT.MULTI, 'SWT.SINGLE | SWT.V_SCROLL | SWT.H_SCROLL', 'SWT.SINGLE | SWT.V_SCROLL', SWT.SINGLE)});\r\n${list}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${list}.setItems(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Table" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.table" name\="Table">${type\:newType(org.eclipse.swt.widgets.Table)} ${table\:newName(org.eclipse.swt.widgets.Table)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.SINGLE | SWT.FULL_SELECTION', 'SWT.MULTI | SWT.FULL_SELECTION', SWT.CHECK, SWT.NONE, SWT.VIRTUAL)});\r\n${table}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${table}.setLinesVisible(${line\:link(true, false)});\r\n${table}.setHeaderVisible(${header\:link(true, false)});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\r\n\r\nfor (int ${index} \= 0; ${index} &lt; ${table}.getColumnCount(); ${index}++) {\r\n\t${table}.getColumn(${index}).pack();\r\n}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TableColumn for a Table " enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.tablecolumn" name\="TableColumn">${type\:newType(org.eclipse.swt.widgets.TableColumn)} ${column\:newName(org.eclipse.swt.widgets.TableColumn)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Table)}, ${style\:link(SWT.LEAD, SWT.CENTER, SWT.TRAIL)});\r\n${column}.setText(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TableItem for a Table" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.tableitem" name\="TableItem">${type\:newType(org.eclipse.swt.widgets.TableItem)} ${item\:newName(org.eclipse.swt.widgets.TableItem)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Table)}, SWT.NONE);\r\n${item}.setText(${count\:link(0, 1, 2, 3, 4, 5)}, ${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Tree" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.tree" name\="Tree">${type\:newType(org.eclipse.swt.widgets.Tree)} ${tree\:newName(org.eclipse.swt.widgets.Tree)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.SINGLE | SWT.FULL_SELECTION', 'SWT.MULTI | SWT.FULL_SELECTION', SWT.CHECK, SWT.NONE, SWT.VIRTUAL)});\r\n${tree}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\r\n${tree}.setLinesVisible(${line\:link(true, false)});\r\n${tree}.setHeaderVisible(${header\:link(true, false)});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\r\n\r\nfor (int ${index} \= 0; ${index} &lt; ${tree}.getColumnCount(); ${index}++) {\r\n\t${tree}.getColumn(${index}).pack();\r\n}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TreeColumn for a Tree " enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.treecolumn" name\="TreeColumn">${type\:newType(org.eclipse.swt.widgets.TreeColumn)} ${column\:newName(org.eclipse.swt.widgets.TreeColumn)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Tree)}, ${style\:link(SWT.LEAD, SWT.CENTER, SWT.TRAIL)});\r\n${column}.setText(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TreeItem for a Tree" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.treeitem" name\="TreeItem">${type\:newType(org.eclipse.swt.widgets.TreeItem)} ${item\:newName(org.eclipse.swt.widgets.TreeItem)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Tree, org.eclipse.swt.widgets.TreeItem)}, SWT.NONE);\r\n${item}.setText(${count\:link(0, 1, 2, 3, 4, 5)}, ${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Sets the cursor to the begin of the expression" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.beg" name\="beg">${}${inner_expression}${cursor}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Casts the expression to a new type" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.cast" name\="cast">((${})${inner_expression})${cursor}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a do-while loop" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.dowhile" name\="dowhile">do {&\#13;\r\n\t${cursor}&\#13;\r\n} while (${i\:inner_expression(boolean)});</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a negated if statement" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.else" name\="else">if (\!${i\:inner_expression(boolean)}${}) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a for statement" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.for" name\="for">for (${type\:newActualType(i)} ${n\:newName(i)} \: ${i\:inner_expression(java.util.Collection,array)}) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a for statement which iterates over an array" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.fori" name\="fori">for (int ${index} \= 0; i &lt; ${i\:inner_expression(array)}.length; ${index}++) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates an indexed for statement which uses the given integer as upper bound" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.foriub" name\="foriub">for (int ${index} \= 0; i &lt; ${i\:inner_expression(int)}; ${index}++) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates an indexed for statement which uses the given integer - 1 as starting value (counting backwards)" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.forrlb" name\="forrlb">for (int ${index} \= ${i\:inner_expression(int)} - 1; i &gt;\= 0 ; ${index}--) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a for statement which iterates over an array in reverse order" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.forr" name\="forr">for (int ${index} \= ${i\:inner_expression(array)}.length - 1; i &gt;\= 0; ${index}--) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates an if statement and checks if the expression does not resolve to null" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.nnull" name\="nnull">if (${i\:inner_expression(java.lang.Object,array)} \!\= null) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates an if statement which checks if expression resolves to null" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.null" name\="null">if (${i\:inner_expression(java.lang.Object,array)} \=\= null) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a short if statement" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.sif" name\="sif">((${i\:inner_expression(boolean)}) ? ${} \: ${cursor})</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates an if statement which checks if the expression does not resolve to null" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.snnull" name\="snnull">(${i\:inner_expression(java.lang.Object,array)} \!\= null) ? ${inner_expression}${} \: ${cursor}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a short if statement which checks for null" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.snull" name\="snull">(${i\:inner_expression(java.lang.Object,array)} \=\= null) ? ${} \: ${inner_expression}${cursor}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Sends the affected string to a System.out.println(..) call" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.sysout" name\="sysout">System.out.println(${i\:inner_expression(java.lang.String)}${});${cursor}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Throws the given Exception" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.throw" name\="throw">throw ${true\:inner_expression(java.lang.Throwable)};</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a new variable" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.var" name\="var">${field\:newType(inner_expression)} ${var\:newName(inner_expression)} \= ${inner_expression};${cursor}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a while loop" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.while" name\="while">while (${i\:inner_expression(boolean)}) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates an if statement which checks if a given numeric variable is within a region" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.withinregion" name\="withinregion">if (${i\:inner_expression(float,int,double,long)} &gt;\= ${lower_bound} &amp;&amp; ${inner_expression} &lt;\= ${upper_bound}) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a new field" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.field" name\="field">${field\:newField(i)} \= ${i\:inner_expression};${cursor}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a new private constant" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.constpriv" name\="constpriv">${n\:newField(i, false, true, true, true)}${i\:inner_expression(novalue)}${cursor}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a new public constant" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.constpub" name\="constpub">${n\:newField(i, true, true, true, true)}${i\:inner_expression(novalue)}${cursor}</template><template autoinsert\="true" context\="postfix" deleted\="false" description\="Creates a new stream using Stream.of" enabled\="false" id\="org.eclipse.jdt.postfixcompletion.stream" name\="stream">Stream.of(${i\:inner_expression(array)})${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="false" name\="f">File f\=new File("${mname}");</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="for">for (int i \= 0; i &lt; 10; ++i) {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="fosfis">try {&\#13;\r\n        if(\!f.exists()){&\#13;\r\n            FileOutputStream fos \= new FileOutputStream(${newName});&\#13;\r\n            DataOutputStream dos \= new DataOutputStream(fos);&\#13;\r\n            dos.close();&\#13;\r\n            fos.close();&\#13;\r\n        }&\#13;\r\n        &\#13;\r\n        FileOutputStream fos \= new FileOutputStream(${newName},true);&\#13;\r\n        DataOutputStream dos \= new DataOutputStream(fos);&\#13;\r\n            &\#13;\r\n        &\#13;\r\n        &\#13;\r\n        FileInputStream fis\=new FileInputStream(${newName});&\#13;\r\n        DataInputStream dis\=new DataInputStream(fis);&\#13;\r\n            &\#13;\r\n        try {&\#13;\r\n            while (true) {&\#13;\r\n                System.out.println(dis.read${cursor}());&\#13;\r\n            }&\#13;\r\n            &\#13;\r\n        } catch (EOFException e) {&\#13;\r\n        }&\#13;\r\n        fis.close();&\#13;\r\n        dis.close();&\#13;\r\n            &\#13;\r\n    } catch (IOException e) {&\#13;\r\n    }</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="fr">FileReader fr\=new FileReader(${newName});&\#13;\r\nBufferedReader br\=new BufferedReader(fr);</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="fw">FileWriter fw\=new FileWriter(${newName});&\#13;\r\nBufferedWriter bw\=new BufferedWriter(fw);</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="scan">Scanner teclado\=new Scanner(System.in);&\#13;\r\n${mname} ${mname2}\=teclado.next${mname1}();</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="psy">public synchronized ${newName1} ${newName} () {&\#13;\r\n\t${cursor}&\#13;\r\n}// ${newName}()</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="hilos">Datos datos\=new Datos();&\#13;\r\n\t\t&\#13;\r\nThread[] ${newName} \= new Thread[${cursor}];&\#13;\r\nfor (int i \= 0; i &lt; ${newName}.length; ++i) {&\#13;\r\n\t${newName}[i] \= new Thread(new ${newName2}(datos));&\#13;\r\n\t${newName}[i].start();&\#13;\r\n}&\#13;\r\nfor (int i \= 0; i &lt; ${newName}.length; ++i) {&\#13;\r\n\ttry {&\#13;\r\n\t\t${newName}[i].join();&\#13;\r\n\t} catch (InterruptedException e) {&\#13;\r\n\t\te.printStackTrace();&\#13;\r\n\t}&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="psm">private static void ${newName}() {&\#13;\r\n\t${cursor}&\#13;\r\n}// ${newName}()</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="pusm">public static void ${newName}() {&\#13;\r\n\t${cursor}&\#13;\r\n}// ${newName}()</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="main">public static void main(String[] args) {&\#13;\r\n   ${cursor}&\#13;\r\n}// main()</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="run">@Override&\#13;\r\npublic void run() {&\#13;\r\n\t${cursor}&\#13;\r\n}// run()</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="pm">public void ${newName}() {&\#13;\r\n\t${cursor}&\#13;\r\n}// ${newName}()</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="abecedarionum">private String clave;&\#13;\r\nchar[] caracteresClave\=new char[64];&\#13;\r\n\t&\#13;\r\npublic void Datos() {&\#13;\r\n\tfor(int j\=0; j&lt;26; ++j) {&\#13;\r\n\t\tcaracteresClave[j]\=(char) ('a'+j);&\#13;\r\n\t}&\#13;\r\n\tint sum\=25;&\#13;\r\n\tfor(int k\=0; k&lt;26; ++k) {&\#13;\r\n\t\tcaracteresClave[++sum]\=(char) ('A'+k);&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tint summ\=51;&\#13;\r\n\tfor(int w\=0; w&lt;10; ++w) {&\#13;\r\n\t\tcaracteresClave[++summ]\=(char) ('0'+w);&\#13;\r\n\t}&\#13;\r\n\tcaracteresClave[62]\='\u00F1';&\#13;\r\n\tcaracteresClave[63]\='\u00D1';&\#13;\r\n}// Datos()</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="random">int randomPos\=(int) (Math.random()*${newName});</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="productorconsumidor">private int informacion \= -1;&\#13;\r\n&\#13;\r\npublic synchronized void producir(int info) {&\#13;\r\n\t//Suponemos que los valores v\u00E1lidos son&\#13;\r\n\t//mayores o iguales que 0. De lo contrario,&\#13;\r\n\t//informaci\u00F3n est\u00E1 vac\u00EDo&\#13;\r\n\twhile(informacion&gt;\=0) {&\#13;\r\n\t\ttry {&\#13;\r\n\t\t\tSystem.out.println("Productor\: quiero producir, pero consumidor no ha consumido");&\#13;\r\n\t\t\t&\#13;\r\n\t\t\twait();&\#13;\r\n\t\t} catch (InterruptedException e) {&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\t//Rellenamos la informaci\u00F3n&\#13;\r\n\tinformacion\=info;&\#13;\r\n\t//Despertamos al consumidor&\#13;\r\n\tnotifyAll();&\#13;\r\n}&\#13;\r\n&\#13;\r\npublic synchronized int consumir() {&\#13;\r\n\t//Esperamos a que haya datos&\#13;\r\n\twhile(informacion&lt;0) {&\#13;\r\n\t\ttry {&\#13;\r\n\t\t\tSystem.out.println("Consumidor\: quiero consumir, pero productor no ha producido");&\#13;\r\n\t\t\twait();&\#13;\r\n\t\t} catch (InterruptedException e) {&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\t//Vaciamos los datos (nos tenemos que quedar&\#13;\r\n\t//con una copia en una variable auxiliar)&\#13;\r\n\tint aux\=informacion;&\#13;\r\n\tinformacion\=-1;&\#13;\r\n\t//Despertamos al productor&\#13;\r\n\tnotifyAll();&\#13;\r\n\treturn aux;&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="proceso">ProcessBuilder pbGrabador \= new ProcessBuilder("java", "-cp",&\#13;\r\n\t\t\t\trutaProcesos,&\#13;\r\n\t\t\t\t"HormigasDeLangton.Grabador");&\#13;\r\nProcess p \= pbGrabador.start();&\#13;\r\nBufferedWriter bw \= new BufferedWriter(new OutputStreamWriter(p.getOutputStream()));&\#13;\r\nreturn bw;</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="estaenvigor">private static boolean estaEnVigor(X509Certificate certificado) {&\#13;\r\n    Date fechaExpiracion \= certificado.getNotAfter();&\#13;\r\n    Date ahora \= new Date();&\#13;\r\n    return ahora.before(fechaExpiracion);&\#13;\r\n}// estaEnVigor()</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="extraercer">private static X509Certificate extraerCertificado(KeyStore almacen, String alias) {&\#13;\r\n    X509Certificate certificado;&\#13;\r\n    try {&\#13;\r\n        certificado \= (X509Certificate) almacen.getCertificate(alias);&\#13;\r\n    } catch (KeyStoreException e) {&\#13;\r\n        e.printStackTrace();&\#13;\r\n        certificado \= null;&\#13;\r\n    }&\#13;\r\n    return certificado;&\#13;\r\n}// extraerCertificado()</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="cargaralmacen">private static KeyStore cargarAlmacen(String ruta, String contrasenha) {&\#13;\r\n    KeyStore almacen;&\#13;\r\n    try {&\#13;\r\n        almacen \= KeyStore.getInstance("PKCS12");&\#13;\r\n        FileInputStream fis \= new FileInputStream(ruta);&\#13;\r\n        almacen.load(fis, contrasenha.toCharArray());&\#13;\r\n        fis.close();&\#13;\r\n    } catch (KeyStoreException | NoSuchAlgorithmException | CertificateException | IOException e) {&\#13;\r\n        System.out.println(e);&\#13;\r\n        //e.printStackTrace();&\#13;\r\n        almacen \= null;&\#13;\r\n    }&\#13;\r\n    return almacen;&\#13;\r\n}// cargarAlmacen()</template></templates>
org.eclipse.jdt.ui.typefilter.disabled=java.rmi.*;
org.eclipse.jdt.ui.typefilter.enabled=com.sun.*;io.micrometer.shaded.*;java.awt.*;jdk.*;org.graalvm.*;sun.*;
semanticHighlighting.abstractClass.color=169,183,198
semanticHighlighting.class.color=169,183,198
semanticHighlighting.field.color=152,118,170
semanticHighlighting.inheritedMethodInvocation.color=169,183,198
semanticHighlighting.localVariable.color=169,183,198
semanticHighlighting.localVariableDeclaration.color=169,183,198
semanticHighlighting.method.color=169,183,198
semanticHighlighting.number.color=104,151,187
semanticHighlighting.parameterVariable.color=169,183,198
semanticHighlighting.restrictedKeywords.color=204,120,50
semanticHighlighting.staticMethodInvocation.color=169,183,198
semanticHighlighting.typeArgument.color=169,183,198
semanticHighlighting.typeParameter.color=204,120,50
sourceHoverBackgroundColor=48,48,48
spelling_locale_initialized=true
typefilter_migrated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
